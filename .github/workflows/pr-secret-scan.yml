name: PR Secret Scan

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

permissions:
  contents: read
  pull-requests: write

jobs:
  gitleaks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Prepare log directory
        run: mkdir -p reports/ci_logs

      - name: Run Gitleaks
        id: gitleaks
        uses: gitleaks/gitleaks-action@v2
        continue-on-error: true
        with:
          args: detect --source . --report-path reports/ci_logs/secret-scan.json --report-format json --no-banner

      - name: Parse secret scan report
        id: parse
        run: |
          python - <<'PYTHON'
          import json
          import os
          from pathlib import Path

          report = Path("reports/ci_logs/secret-scan.json")
          report.parent.mkdir(parents=True, exist_ok=True)
          leaks = []
          if report.exists():
              with report.open("r", encoding="utf-8") as handle:
                  data = json.load(handle)
                  leaks = data.get("leaks", [])
          else:
              report.write_text(json.dumps({"leaks": []}, indent=2), encoding="utf-8")

          for leak in leaks:
              file_path = leak.get("file", "<unknown>")
              line = leak.get("line", 1)
              rule = leak.get("rule", "Secret")
              print(f"::error file={file_path},line={line}::{rule} detected by secret scan")

          output_path = Path(os.environ["GITHUB_OUTPUT"])
          with output_path.open("a", encoding="utf-8") as handle:
              handle.write(f"has_findings={'true' if leaks else 'false'}\n")
          PYTHON

      - name: Upload secret scan logs
        uses: actions/upload-artifact@v4
        with:
          name: secret-scan-logs
          path: reports/ci_logs/secret-scan.json

      - name: Ensure scanner execution
        if: steps.gitleaks.outcome == 'failure' && steps.parse.outputs.has_findings != 'true'
        run: |
          echo "Gitleaks execution failed unexpectedly" >&2
          exit 1

      - name: Fail on detected secrets
        if: steps.parse.outputs.has_findings == 'true'
        run: |
          echo "Secret scan detected high severity findings" >&2
          exit 1
